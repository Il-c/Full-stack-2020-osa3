{"version":3,"sources":["components/Filter.js","components/AddPersonForm.js","components/ShowPersons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","text","value","onChange","AddPersonForm","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","type","ShowPersons","personsToShow","removePerson","map","person","key","id","name","number","onClick","Notification","message","className","content","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","useEffect","personService","initialPersons","filter","toLowerCase","includes","showMessage","setTimeout","event","target","preventDefault","nameObject","window","confirm","find","changedPerson","returnedPerson","concat","console","log","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.409d7458.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = (props) =>(\r\n    <div> \r\n        {props.text} <input value ={props.value} onChange={props.onChange}/>\r\n    </div>\r\n)\r\nexport default Filter","import React from 'react';\r\n\r\nconst AddPersonForm = (props) => (\r\n    <form onSubmit={props.onSubmit}>\r\n        <div>name: <input value ={props.valueName} onChange={props.onChangeName}/></div>\r\n        <div>number: <input value ={props.valueNumber} onChange={props.onChangeNumber}/></div>\r\n        <div><button type=\"submit\">add</button></div>\r\n    </form>\r\n)\r\nexport default AddPersonForm","import React from 'react';\r\n//{props.name} {props.number} \r\nconst ShowPersons = ({personsToShow,removePerson}) => (\r\n    <div>\r\n        {personsToShow.map(person => \r\n            <div key={person.id}>\r\n                {person.name} {person.number} \r\n                <button onClick={()=>removePerson(person.id)}>{\"poista\"}</button>\r\n            </div>\r\n            \r\n    )}\r\n    </div>\r\n)\r\n\r\n\r\n/*const ShowPersons = (props) => (\r\n    <div>\r\n        {props.person.name} {props.person.number}\r\n        <button onClick={props.removePerson}>{\"poista\"}</button>\r\n    </div>  \r\n)*/\r\nexport default ShowPersons","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className={message.type}>\r\n        {message.content}\r\n      </div>\r\n    )\r\n  }\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport AddPersonForm from './components/AddPersonForm'\nimport ShowPersons from './components/ShowPersons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage] = useState({content:null,type:null})\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n    \n    if(persons.map(person => person.name).includes(newName)){\n      \n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const person = persons.find(person=>person.name===newName)\n        const changedPerson = {...person, number: newNumber}\n        personService\n          .update(person.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person=>person.name!==newName?person:returnedPerson))\n            showMessage(`${newName}'s phonenumber updated!`, 'info' )\n        })\n      }\n      return\n    }\n    personService\n      .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          showMessage(`${newName} added!`, 'info')\n        })\n    \n  }\n\n  const personsToShow = persons.filter(person => (person.name.toLowerCase()).includes(newFilter.toLowerCase()))\n\n  const removePerson = (id) => {\n    const name = persons.find(person=>person.id===id).name\n    if (window.confirm(`Delete ${name} ?`)){\n      console.log(`${id} is being removed`)\n      personService\n        .remove(id)\n          .then(returnedPerson=>{\n            setPersons(persons.filter(person => person.id !== id ))\n            showMessage(`${name} deleted!`, 'info')\n          })\n        .catch(error => {\n          setPersons(persons.filter(person => person.id !== id ))\n          showMessage(`Information of ${name} has already been removed from server`, 'error')\n        })  \n    }\n  }\n\n  const handleNameChange = (event) =>{\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) =>{\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) =>{\n    setNewFilter(event.target.value)\n  }\n\n  \n  const showMessage = (content, type) =>{\n    setMessage({content, type})\n    setTimeout(() => {\n      setMessage(null)\n    }, 4000)\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter text={'filter shown with:'} value = {newFilter} onChange={handleFilterChange}/> \n      <h2>Add a new</h2>\n      <AddPersonForm onSubmit = {addPerson} \n        valueName = {newName} onChangeName = {handleNameChange}\n        valueNumber = {newNumber} onChangeNumber = {handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <div>\n      <ShowPersons personsToShow = {personsToShow} removePerson={(id)=>removePerson(id)}/>\n    </div>\n     \n    </div>\n  )\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}